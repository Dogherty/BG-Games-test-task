2) Тема "Решето Эратосфена"

Реализуйте алгоритм решета Эратосфена для поиска всех простых чисел до заданного числа N.

Решето Эратосфена - это метод нахождения всех простых чисел до заданного числа. Простые числа - это числа, которые имеют только два делителя: 1 и само число.

Решето Эратосфена основано на следующем простом принципе:

1. Начнем с массива чисел от 2 до заданного числа N.
2. Начиная с самого маленького простого числа (2), вычеркнем все его кратные числа, так как они не могут быть простыми.
3. Перейдем к следующему не вычеркнутому числу и повторим шаг 2.
4. Продолжим этот процесс до тех пор, пока не рассмотрим все числа до N.
5. После завершения алгоритма останутся только невычеркнутые числа, которые и будут простыми числами до N.

Для решения данной задачи мы можем реализовать следующий алгоритм:

<imprecise>
1 .Создаем массив is_prime, в котором индексам соответствуют числа от 0 до N. Изначально все числа помечены как простые (True).

2. 0 и 1 помечаются как не простые числа (False).

3. Начиная с 2 (первого простого числа), для каждого простого числа от 2 до N, если текущее число простое, то помечается как простое, и все его кратные числа помечаются как не простые.

4. Формируем список простых чисел, используя массив is_prime.

5. Возвращается список простых чисел.
</imprecise>

Код задачи:

<imprecise>
<code>
def sieve_of_eratosthenes(N):
    is_prime = [True] * (N + 1)
    is_prime[0] = is_prime[1] = False

    for i in range(2, int(N ** 0.5) + 1):
        if is_prime[i]:
            for j in range(i * i, N + 1, i):
                is_prime[j] = False
    primes = [num for num in range(2, N + 1) if is_prime[num]]

    return primes
</code>
</imprecise>